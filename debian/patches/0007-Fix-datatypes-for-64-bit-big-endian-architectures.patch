From: David Bremner <david@tethera.net>
Date: Tue, 10 Oct 2017 08:02:45 -0300
Subject: Fix datatypes for 64-bit big-endian architectures

The mechanism to process commmand line arguments involves a series of
explicit casts when filling the members of cli_options. The existing
code failed on some 64-bit big-endian architectures, which is fixed by
this patch.

Adjacent code may benefit from similar edits, but no other changes were made.
Author: Felix Lechner <felix.lechner@lease-up.com>
Forwarded: no
Last-Update: 2017-10-09
---
 lib/cli++/main.cc | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/lib/cli++/main.cc b/lib/cli++/main.cc
index 8fd4dba..2842837 100644
--- a/lib/cli++/main.cc
+++ b/lib/cli++/main.cc
@@ -191,7 +191,7 @@ int cli_option::set(const char* arg)
     }
     return 1;
   case uinteger:
-    *(unsigned*)dataptr = strtoul(arg, &endptr, 10);
+    *(unsigned long*)dataptr = strtoul(arg, &endptr, 10);
     if(*endptr) {
       ferr << argv0 << ": invalid unsigned integer: " << arg << endl;
       return -1;
